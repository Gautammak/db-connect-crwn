{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.type\";\nimport { SignInFailure, SignInSuccess } from \"./user.action\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function signInwithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n  return function* () {\n    try {\n      const {\n        user\n      } = yield auth.signInWithEmailAndPassword(email, password);\n      yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n      yield put(SignInFailure(error));\n    }\n  }();\n}\nexport function* isUserAuthenticated() {}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInwithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"names":["takeLatest","put","all","call","UserActionTypes","SignInFailure","SignInSuccess","auth","googleProvider","createUserProfileDocument","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInwithEmail","_ref","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","userSagas"],"sources":["/Users/studiomac-116/Desktop/gm_internship/crwn-clothing-main/src/redux/user/user.sagas.js"],"sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.type\";\nimport { SignInFailure, SignInSuccess } from \"./user.action\";\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n} from \"../../firebase/firebase.utils\";\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* signInwithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInwithEmail);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,QAAQ,oBAAoB;AAE/D,OAAOC,eAAe,MAAM,aAAa;AACzC,SAASC,aAAa,EAAEC,aAAa,QAAQ,eAAe;AAE5D,SACEC,IAAI,EACJC,cAAc,EACdC,yBAAyB,QACpB,+BAA+B;AAEtC,OAAO,UAAUC,uBAAuBA,CAACC,QAAQ,EAAE;EACjD,IAAI;IACF,MAAMC,OAAO,GAAG,MAAMT,IAAI,CAACM,yBAAyB,EAAEE,QAAQ,CAAC;IAC/D,MAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAG,EAAE;IACxC,MAAMb,GAAG,CAACK,aAAa,CAAC;MAAES,EAAE,EAAEF,YAAY,CAACE,EAAE;MAAE,GAAGF,YAAY,CAACG,IAAI;IAAG,CAAC,CAAC,CAAC;EAC3E,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMhB,GAAG,CAACI,aAAa,CAACY,KAAK,CAAC,CAAC;EACjC;AACF;AAEA,OAAO,UAAUC,gBAAgBA,CAAA,EAAG;EAClC,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMZ,IAAI,CAACa,eAAe,CAACZ,cAAc,CAAC;IAC3D,MAAME,uBAAuB,CAACS,IAAI,CAAC;EACrC,CAAC,CAAC,OAAOF,KAAK,EAAE;IACd,MAAMhB,GAAG,CAACI,aAAa,CAACY,KAAK,CAAC,CAAC;EACjC;AACF;AAEA,OAAO,SAAUI,eAAeA,CAAAC,IAAA;EAAA,IAAC;IAAEC,OAAO,EAAE;MAAEC,KAAK;MAAEC;IAAS;EAAE,CAAC,GAAAH,IAAA;EAAA,oBAAE;IACjE,IAAI;MACF,MAAM;QAAEH;MAAK,CAAC,GAAG,MAAMZ,IAAI,CAACmB,0BAA0B,CAACF,KAAK,EAAEC,QAAQ,CAAC;MACvE,MAAMf,uBAAuB,CAACS,IAAI,CAAC;IACrC,CAAC,CAAC,OAAOF,KAAK,EAAE;MACd,MAAMhB,GAAG,CAACI,aAAa,CAACY,KAAK,CAAC,CAAC;IACjC;EACF,CAAC;AAAA;AACD,OAAO,UAAUU,mBAAmBA,CAAA,EAAG,CAAC;AACxC,OAAO,UAAUC,mBAAmBA,CAAA,EAAG;EACrC,MAAM5B,UAAU,CAACI,eAAe,CAACyB,oBAAoB,EAAEX,gBAAgB,CAAC;AAC1E;AAEA,OAAO,UAAUY,kBAAkBA,CAAA,EAAG;EACpC,MAAM9B,UAAU,CAACI,eAAe,CAAC2B,mBAAmB,EAAEV,eAAe,CAAC;AACxE;AAEA,OAAO,UAAUW,kBAAkBA,CAAA,EAAG;EACpC,MAAMhC,UAAU,CAACI,eAAe,CAAC6B,kBAAkB,EAAEN,mBAAmB,CAAC;AAC3E;AAEA,OAAO,UAAUO,SAASA,CAAA,EAAG;EAC3B,MAAMhC,GAAG,CAAC,CAACC,IAAI,CAACyB,mBAAmB,CAAC,EAAEzB,IAAI,CAAC2B,kBAAkB,CAAC,CAAC,CAAC;AAClE"},"metadata":{},"sourceType":"module","externalDependencies":[]}