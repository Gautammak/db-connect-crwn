{"ast":null,"code":"import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport { firestore, convertcollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.action\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertcollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"names":["takeLatest","call","put","all","firestore","convertcollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"sources":["/Users/studiomac-116/Desktop/gm_internship/crwn-clothing-main/src/redux/shop/shop.sagas.js"],"sourcesContent":["import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport {\n  firestore,\n  convertcollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from \"./shop.action\";\n\nimport ShopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertcollectionsSnapshotToMap,\n      snapshot\n    );\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAQ,oBAAoB;AAC/D,SACEC,SAAS,EACTC,+BAA+B,QAC1B,+BAA+B;AACtC,SACEC,uBAAuB,EACvBC,uBAAuB,QAClB,eAAe;AAEtB,OAAOC,eAAe,MAAM,cAAc;AAE1C,OAAO,UAAUC,qBAAqBA,CAAA,EAAG;EACvC,IAAI;IACF,MAAMC,aAAa,GAAGN,SAAS,CAACO,UAAU,CAAC,aAAa,CAAC;IACzD,MAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAG,EAAE;IAC1C,MAAMC,cAAc,GAAG,MAAMb,IAAI,CAC/BI,+BAA+B,EAC/BO,QAAQ,CACT;IACD,MAAMV,GAAG,CAACI,uBAAuB,CAACQ,cAAc,CAAC,CAAC;EACpD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMb,GAAG,CAACK,uBAAuB,CAACQ,KAAK,CAACC,OAAO,CAAC,CAAC;EACnD;AACF;AACA,OAAO,UAAUC,qBAAqBA,CAAA,EAAG;EACvC,MAAMjB,UAAU,CACdQ,eAAe,CAACU,uBAAuB,EACvCT,qBAAqB,CACtB;AACH;AAEA,OAAO,UAAUU,SAASA,CAAA,EAAG;EAC3B,MAAMhB,GAAG,CAAC,CAACF,IAAI,CAACgB,qBAAqB,CAAC,CAAC,CAAC;AAC1C"},"metadata":{},"sourceType":"module","externalDependencies":[]}