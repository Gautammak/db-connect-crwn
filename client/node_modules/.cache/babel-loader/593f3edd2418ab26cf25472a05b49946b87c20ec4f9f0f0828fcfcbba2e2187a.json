{"ast":null,"code":"var _jsxFileName = \"/Users/studiomac-116/Desktop/gm_internship/crwn-clothing-main/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../category/collection.component\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverview from \"../../components/collection-overwiew/collections-overview.component\";\nimport { firestore, convertcollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shop.action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ShopPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.unsubscribeFromSnapshot = null;\n  }\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertcollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n  }\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"names":["React","Route","CollectionPage","connect","CollectionsOverview","firestore","convertcollectionsSnapshotToMap","updateCollections","jsxDEV","_jsxDEV","ShopPage","Component","constructor","arguments","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","className","children","exact","path","component","fileName","_jsxFileName","lineNumber","columnNumber","mapDispatchToProps","dispatch"],"sources":["/Users/studiomac-116/Desktop/gm_internship/crwn-clothing-main/src/pages/shop/shop.component.jsx"],"sourcesContent":["import React from \"react\";\n\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../category/collection.component\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverview from \"../../components/collection-overwiew/collections-overview.component\";\nimport {\n  firestore,\n  convertcollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nimport { updateCollections } from \"../../redux/shop/shop.action\";\n\nclass ShopPage extends React.Component {\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(\n      async (snapshot) => {\n        const collectionsMap = convertcollectionsSnapshotToMap(snapshot);\n        updateCollections(collectionsMap);\n      }\n    );\n  }\n\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollections: (collectionsMap) =>\n    dispatch(updateCollections(collectionsMap)),\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,KAAK,QAAQ,kBAAkB;AACxC,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,mBAAmB,MAAM,qEAAqE;AACrG,SACEC,SAAS,EACTC,+BAA+B,QAC1B,+BAA+B;AAEtC,SAASC,iBAAiB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,QAAQ,SAASV,KAAK,CAACW,SAAS,CAAC;EAAAC,YAAA;IAAA,SAAAC,SAAA;IAAA,KACrCC,uBAAuB,GAAG,IAAI;EAAA;EAE9BC,iBAAiBA,CAAA,EAAG;IAClB,MAAM;MAAER;IAAkB,CAAC,GAAG,IAAI,CAACS,KAAK;IACxC,MAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAU,CAAC,aAAa,CAAC;IAEzD,IAAI,CAACJ,uBAAuB,GAAGG,aAAa,CAACE,UAAU,CACrD,MAAOC,QAAQ,IAAK;MAClB,MAAMC,cAAc,GAAGf,+BAA+B,CAACc,QAAQ,CAAC;MAChEb,iBAAiB,CAACc,cAAc,CAAC;IACnC,CAAC,CACF;EACH;EAEAC,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACP,KAAK;IAC5B,oBACEP,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBhB,OAAA,CAACR,KAAK;QAACyB,KAAK;QAACC,IAAI,EAAG,GAAEJ,KAAK,CAACI,IAAK,EAAE;QAACC,SAAS,EAAExB;MAAoB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACtEvB,OAAA,CAACR,KAAK;QACJ0B,IAAI,EAAG,GAAEJ,KAAK,CAACI,IAAK,gBAAgB;QACpCC,SAAS,EAAE1B;MAAe;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAEV;AACF;AACA,MAAMC,kBAAkB,GAAIC,QAAQ,KAAM;EACxC3B,iBAAiB,EAAGc,cAAc,IAChCa,QAAQ,CAAC3B,iBAAiB,CAACc,cAAc,CAAC;AAC9C,CAAC,CAAC;AAEF,eAAelB,OAAO,CAAC,IAAI,EAAE8B,kBAAkB,CAAC,CAACvB,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}