{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { convertcollectionsSnapshotToMaps, firestore } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertcollectionsSnapshotToMaps(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"names":["ShopActionTypes","convertcollectionsSnapshotToMaps","firestore","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"sources":["/Users/studiomac-116/Desktop/gm_internship/crwn-clothing-main/src/redux/shop/shop.action.js"],"sourcesContent":["import ShopActionTypes from \"./shop.types\";\nimport {\n  convertcollectionsSnapshotToMaps,\n  firestore,\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap,\n});\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage,\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n\n    collectionRef\n      .get()\n      .then((snapshot) => {\n        const collectionsMap = convertcollectionsSnapshotToMaps(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n      })\n      .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,cAAc;AAC1C,SACEC,gCAAgC,EAChCC,SAAS,QACJ,+BAA+B;AAEtC,OAAO,MAAMC,qBAAqB,GAAGA,CAAA,MAAO;EAC1CC,IAAI,EAAEJ,eAAe,CAACK;AACxB,CAAC,CAAC;AAEF,OAAO,MAAMC,uBAAuB,GAAIC,cAAc,KAAM;EAC1DH,IAAI,EAAEJ,eAAe,CAACQ,yBAAyB;EAC/CC,OAAO,EAAEF;AACX,CAAC,CAAC;AAEF,OAAO,MAAMG,uBAAuB,GAAIC,YAAY,KAAM;EACxDP,IAAI,EAAEJ,eAAe,CAACY,yBAAyB;EAC/CH,OAAO,EAAEE;AACX,CAAC,CAAC;AAEF,OAAO,MAAME,0BAA0B,GAAGA,CAAA,KAAM;EAC9C,OAAQC,QAAQ,IAAK;IACnB,MAAMC,aAAa,GAAGb,SAAS,CAACc,UAAU,CAAC,aAAa,CAAC;IACzDF,QAAQ,CAACX,qBAAqB,EAAE,CAAC;IAEjCY,aAAa,CACVE,GAAG,EAAE,CACLC,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMZ,cAAc,GAAGN,gCAAgC,CAACkB,QAAQ,CAAC;MACjEL,QAAQ,CAACR,uBAAuB,CAACC,cAAc,CAAC,CAAC;IACnD,CAAC,CAAC,CACDa,KAAK,CAAEC,KAAK,IAAKP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC;EACvE,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}